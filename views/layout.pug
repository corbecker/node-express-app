doctype html
html
  head
    title= `${title} | ${h.siteName}`
    link(rel='stylesheet', href='/dist/style.css')
    link(rel="shortcut icon" type="image/png" href="/images/icons/doughnut.png")
    meta(name="viewport" content="width=device-width, initial-scale=1")
  body
    block header
      header.top
        nav.nav
          .burger--container
            span.burger--line
            span.burger--line
            span.burger--line

          .nav__section.nav__section--logo
            li.nav__item
              a.nav__link.nav__link--logo(href="/")
                img(src="/images/icons/logo.png", alt="logo")
          .nav__section.nav__section--pages
            each item in h.menu
              li.nav__item
                a.nav__link(href=item.slug, class=(currentPath.startsWith(item.slug) ? 'nav__link--active' : ''))
                  span #{item.title}
          .nav__section.nav__section--search
            .search
              input.search__input(type="text" placeholder="Smoothie, veggie burger..." name="search")
              .search__results
          .nav__section.nav__section--user
            if user
              li.nav__item: a.nav__link(href="/hearts", class=(currentPath.startsWith('/hearts') ? 'nav__link--active' : ''))
                != h.icon('heart')
                span.heart-count #{user.hearts && user.hearts.length}
              li.nav__item: a.nav__link(href="/logout", class=(currentPath.startsWith('/logout') ? 'nav__link--active' : ''))
                != h.icon('logout')
                span Logout
              li.nav__item: a.nav__link(href="/account", class=(currentPath.startsWith('/account') ? 'nav__link--active' : ''))
                img.avatar(src=user.gravatar + '&d=retro')
            else
              li.nav__item: a.nav__link(href="/register", class=(currentPath.startsWith('/register') ? 'nav__link--active' : ''))
                  span Register
              li.nav__item: a.nav__link(href="/login", class=(currentPath.startsWith('/login') ? 'nav__link--active' : ''))
                span Log In

    block messages
      script.
        setTimeout(() => {document.querySelector('.flash-messages').remove()},3000)
      if locals.flashes
        .inner
          .flash-messages
            - const categories = Object.keys(locals.flashes)
            each category in categories
              each message in flashes[category]
                .flash(class=`flash--${category}`)
                  p.flash__text!= message
    .content
      block content

    block scripts
      script(src=`https://maps.googleapis.com/maps/api/js?key=${process.env.MAP_KEY}&libraries=places`)
      script(src="/dist/App.bundle.js")
